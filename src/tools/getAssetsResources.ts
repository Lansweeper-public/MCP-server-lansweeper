import { z } from "zod";
import { createGraphQLClient } from "../client/graphqlClient.js";
import { CallToolResult } from "@modelcontextprotocol/sdk/types.js";

// TypeScript interfaces for asset resource response
interface AssetResourcePagination {
  limit: number;
  current: string | null;
  next: string | null;
  page: string;
}

interface AssetResourcesResponse {
  items: Record<string, unknown>[]; // The actual asset data structure varies based on requested fields
  pagination: AssetResourcePagination;
  total: number;
}

interface SiteAssetResourcesResponse {
  site: {
    assetResources: AssetResourcesResponse;
  };
}

// AssetsFilterType enum - all available filter operators
const AssetsFilterTypeEnum = z.enum([
  "EQUAL",
  "NOT_EQUAL",
  "SMALLER_THAN",
  "SMALLER_THAN_OR_EQUAL",
  "GREATER_THAN",
  "GREATER_THAN_OR_EQUAL",
  "IN",
  "NOT_IN",
  "LIKE",
  "NOT_LIKE",
  "IS_NULL",
  "IS_NOT_NULL",
  "STARTS_WITH",
  "NOT_STARTS_WITH",
  "ENDS_WITH",
  "NOT_ENDS_WITH",
  "CONTAINS",
  "NOT_CONTAINS",
]);

// AssetsFilterConjunction enum - logical operators
const AssetsFilterConjunctionEnum = z.enum(["AND", "OR"]);

const reservedFilterPaths = [
  "key",
  "installKey",
  "installationId",
  "assetBasicInfo.cloudCategory",
  "assetBasicInfo.cloudEnvId",
  "assetBasicInfo.cloudEnvName",
  "assetBasicInfo.cloudOrgId",
  "assetBasicInfo.cloudOrgName",
  "assetBasicInfo.cloudProvider",
  "assetBasicInfo.cloudRegion",
  "assetBasicInfo.cloudTags",
  "assetBasicInfo.description",
  "assetBasicInfo.domain",
  "assetBasicInfo.firstSeen",
  "assetBasicInfo.fqdn",
  "assetBasicInfo.ipAddress",
  "assetBasicInfo.lastSeen",
  "assetBasicInfo.lastTried",
  "assetBasicInfo.lastUpdated",
  "assetBasicInfo.mac",
  "assetBasicInfo.name",
  "assetBasicInfo.origin",
  "assetBasicInfo.scannerTypes",
  "assetBasicInfo.subType",
  "assetBasicInfo.type",
  "assetBasicInfo.typeGroup",
  "assetBasicInfo.userName",
  "assetCustom.comment",
  "assetCustom.department",
  "assetCustom.dnsName",
  "assetCustom.fields.fieldKey",
  "assetCustom.fields.name",
  "assetCustom.fields.value",
  "assetCustom.location",
  "assetCustom.manufacturer",
  "assetCustom.model",
  "assetCustom.purchaseDate",
  "assetCustom.serialNumber",
  "assetCustom.stateName",
  "assetCustom.warrantyDate",
  "assetGroups.assetGroupKey",
  "assetGroups.name",
  "operatingSystem.buildNumber",
  "operatingSystem.caption",
  "operatingSystem.version",
  "otData.moduleType",
  "reconciliations.sourceId",
  "relations.childAssetKey",
  "relations.name",
  "relations.parentAssetKey",
] as const;
const FilterPathsSchema = z.enum(reservedFilterPaths);

// AssetsFiltersCondition - individual filter condition
const AssetsFiltersConditionSchema = z.object({
  operator: AssetsFilterTypeEnum.describe("The filter operator to apply"),
  path: FilterPathsSchema.describe(
    `The field path to filter on. Available paths: 
        assetBasicInfo.cloudCategory, assetBasicInfo.cloudEnvId, assetBasicInfo.cloudEnvName, 
        assetBasicInfo.cloudOrgId, assetBasicInfo.cloudOrgName, assetBasicInfo.cloudProvider, 
        assetBasicInfo.cloudRegion, assetBasicInfo.cloudTags, assetBasicInfo.description, 
        assetBasicInfo.domain, assetBasicInfo.firstSeen, assetBasicInfo.ipAddress, 
        assetBasicInfo.lastSeen, assetBasicInfo.lastTried, assetBasicInfo.lastUpdated, 
        assetBasicInfo.mac, assetBasicInfo.name, assetBasicInfo.origin, assetBasicInfo.scannerTypes, 
        assetBasicInfo.subType, assetBasicInfo.type, assetBasicInfo.typeGroup, assetBasicInfo.userName, 
        assetCustom.dnsName, assetCustom.manufacturer, assetCustom.model, assetCustom.purchaseDate, 
        assetCustom.serialNumber, assetCustom.stateName, assetCustom.warrantyDate, 
        assetGroups.assetGroupKey, assetGroups.name, installKey, installationId, key, otData.moduleType`,
  ),
  value: z.string().describe("The value to filter by"),
});

// Type definition for recursive filter structure
type AssetsFilterGroupedInputType = {
  conditions?: Array<z.infer<typeof AssetsFiltersConditionSchema>>;
  conjunction?: z.infer<typeof AssetsFilterConjunctionEnum>;
  groups?: Array<AssetsFilterGroupedInputType>;
};

// AssetsFilterGroupedInput - recursive filter structure
const AssetsFilterGroupedInputSchema: z.ZodType<AssetsFilterGroupedInputType> = z.lazy(() =>
  z.object({
    conditions: z.array(AssetsFiltersConditionSchema).optional().describe("Array of filter conditions to apply"),
    conjunction: AssetsFilterConjunctionEnum.optional().describe(
      "Logical operator to combine conditions and groups (default: AND)",
    ),
    groups: z.array(AssetsFilterGroupedInputSchema).optional().describe("Nested filter groups for complex filtering"),
  }),
);

// Available asset field paths for querying
const availableAssetFields = [
  "key",
  "installKey",
  "installationId",
  "tenantId",
  "url",
  "processes.caption",
  "processes.commandLine",
  "processes.executablePath",
  "processes.priority",
  "processes.threadCount",
  "assetBasicInfo.upTime",
  "assetBasicInfo.domain",
  "assetBasicInfo.name",
  "assetBasicInfo.userDomain",
  "assetBasicInfo.userName",
  "assetBasicInfo.assetUnique",
  "assetBasicInfo.description",
  "assetBasicInfo.firstSeen",
  "assetBasicInfo.fqdn",
  "assetBasicInfo.ipAddress",
  "assetBasicInfo.lastSeen",
  "assetBasicInfo.mac",
  "assetBasicInfo.subType",
  "assetBasicInfo.type",
  "assetBasicInfo.typeGroup",
  "assetBasicInfo.lastChanged",
  "assetBasicInfo.lsPushVersion",
  "assetBasicInfo.lsAgentVersion",
  "assetBasicInfo.lastActiveScan",
  "assetBasicInfo.lastIpScan",
  "assetBasicInfo.lastLsAgent",
  "assetBasicInfo.lastLsFallBack",
  "assetBasicInfo.lastLsPush",
  "assetBasicInfo.lastPerformanceScan",
  "assetBasicInfo.lastSccmScan",
  "assetBasicInfo.lastScheduled",
  "assetBasicInfo.lastTried",
  "assetBasicInfo.lastTriggered",
  "assetBasicInfo.lastWorkGroupScan",
  "assetBasicInfo.scannerType",
  "assetBasicInfo.scannerTypes",
  "assetBasicInfo.scanServer",
  "assetBasicInfo.sccmServer",
  "assetBasicInfo.cloudProvider",
  "assetBasicInfo.cloudCategory",
  "assetBasicInfo.cloudOrgName",
  "assetBasicInfo.cloudOrgId",
  "assetBasicInfo.cloudEnvName",
  "assetBasicInfo.cloudEnvId",
  "assetBasicInfo.cloudResourceId",
  "assetBasicInfo.cloudRegion",
  "assetBasicInfo.origin",
  "assetBasicInfo.cloudTags",
  "assetBasicInfo.lastUpdated",
  "bootConfigurations.caption",
  "bootConfigurations.bootDirectory",
  "bootConfigurations.configurationPath",
  "bootConfigurations.scratchDirectory",
  "bootConfigurations.tempDirectory",
  "bootConfigurations.hash",
  "bootConfigurations.lastChanged",
  "bootConfigurations.bootMode",
  "bootConfigurations.bootVolume",
  "bootConfigurations.bootRomVersion",
  "operatingSystem.servicePack",
  "operatingSystem.version",
  "operatingSystem.buildRevNumber",
  "operatingSystem.caption",
  "operatingSystem.osType",
  "operatingSystem.lastChanged",
  "operatingSystem.hostName",
  "operatingSystem.bootStatus",
  "operatingSystem.buildType",
  "operatingSystem.countryCode",
  "operatingSystem.installDate",
  "operatingSystem.organization",
  "operatingSystem.osProductSuite",
  "operatingSystem.otherTypeDescription",
  "operatingSystem.productType",
  "operatingSystem.registeredUser",
  "operatingSystem.serialNumber",
  "operatingSystem.servicePackMajorVersion",
  "operatingSystem.servicePackMinorVersion",
  "operatingSystem.suiteMask",
  "operatingSystem.buildNumber",
  "operatingSystem.windowsDirectory",
  "operatingSystem.currentTimezone",
  "operatingSystem.dataExecutionPrevention32BitApplications",
  "operatingSystem.dataExecutionPreventionAvailable",
  "operatingSystem.dataExecutionPreventionDrivers",
  "operatingSystem.dataExecutionPreventionSupportPolicy",
  "operatingSystem.encryptionLevel",
  "operatingSystem.maxProcessMemorySize",
  "operatingSystem.numberOfLicensedUsers",
  "operatingSystem.sizeStoredInPagingFiles",
  "operatingSystem.systemDevice",
  "operatingSystem.systemDrive",
  "operatingSystem.totalVirtualMemorySize",
  "operatingSystem.totalVisibleMemorySize",
  "operatingSystem.language",
  "operatingSystem.secureVirtualMemory",
  "operatingSystem.x86x64Kernel",
  "operatingSystem.annotatedAssetId",
  "operatingSystem.annotatedLocation",
  "operatingSystem.annotatedUser",
  "operatingSystem.deviceId",
  "operatingSystem.lastEnrollmentTime",
  "operatingSystem.meid",
  "operatingSystem.name",
  "operatingSystem.notes",
  "operatingSystem.orgUnitPath",
  "operatingSystem.status",
  "operatingSystem.supportEndDate",
  "operatingSystem.willAutoRenew",
  "operatingSystem.activeTimeRanges.activeTime",
  "operatingSystem.activeTimeRanges.date",
  "operatingSystem.osDiskSizeInMb",
  "operatingSystem.codeset",
  "operatingSystem.debug",
  "operatingSystem.foregroundApplicationBoost",
  "volumes.attachTime",
  "volumes.attachmentState",
  "volumes.automount",
  "volumes.size",
  "volumes.snapshotId",
  "volumes.state",
  "volumes.fileSystem",
  "volumes.label",
  "volumes.name",
  "volumes.type",
  "volumes.volumeId",
  "volumes.volumeType",
  "volumes.lastChanged",
  "volumes.mountPoint",
  "volumes.blockSize",
  "volumes.compressed",
  "volumes.creationDate",
  "volumes.deleteOnTermination",
  "volumes.device",
  "volumes.driveLetter",
  "volumes.driveType",
  "volumes.errorMethodology",
  "volumes.freeSpace",
  "volumes.indexingEnabled",
  "volumes.iops",
  "volumes.encrypted",
  "volumes.pageFilePresent",
  "volumes.supportsDiskQuotas",
  "volumes.supportsFileBasedCompression",
  "volumes.protectionStatus",
  "mappedDrives.autoMounted",
  "mappedDrives.type",
  "mappedDrives.name",
  "mappedDrives.lastChanged",
  "mappedDrives.remotePath",
  "mappedDrives.mountedFrom",
  "mappedDrives.userName",
  "mappedDrives.driveLetter",
  "memoryModules.size",
  "memoryModules.dataWidth",
  "memoryModules.locator",
  "memoryModules.formFactor",
  "memoryModules.lastChanged",
  "memoryModules.manufacturer",
  "memoryModules.type",
  "memoryModules.serialNumber",
  "memoryModules.speed",
  "memoryModules.totalWidth",
  "memoryModules.typeDetail",
  "memoryModules.name",
  "memoryModules.status",
  "memoryModules.configuredClockSpeed",
  "memoryModules.voltage",
  "memoryModules.interleaveDatadepth",
  "memoryModules.interleavePosition",
  "memoryModules.partNumber",
  "memoryModules.positionInRow",
  "memoryModules.sku",
  "memoryModules.set",
  "memoryArrays.currentInterleave",
  "memoryArrays.maxMemoryModuleSize",
  "memoryArrays.lastChanged",
  "memoryArrays.totalSize",
  "memoryArrays.numberOfSlots",
  "memoryArrays.supportedInterleave",
  "memoryArrays.supportedTypes",
  "memoryArrays.supportedSpeeds",
  "memoryArrays.location",
  "memoryArrays.correctionError",
  "memoryArrays.use",
  "memoryArrays.tag",
  "cdromDrives.capability",
  "cdromDrives.caption",
  "cdromDrives.drive",
  "cdromDrives.lastChanged",
  "cdromDrives.manufacturer",
  "cdromDrives.firmware",
  "cdromDrives.interConnect",
  "cdromDrives.burnSupport",
  "cdromDrives.burnUnderrunProtection",
  "cdromDrives.cache",
  "cdromDrives.cdWrite",
  "cdromDrives.dvdWrite",
  "cdromDrives.media",
  "cdromDrives.readDvd",
  "cdromDrives.writeStrategies",
  "cdromDrives.mount",
  "cdromDrives.path",
  "buses.deviceId",
  "buses.number",
  "buses.type",
  "buses.lastChanged",
  "services.caption",
  "services.pathName",
  "services.startName",
  "services.startMode",
  "services.state",
  "services.lastChanged",
  "users.accountType",
  "users.disabled",
  "users.fullName",
  "users.lockout",
  "users.name",
  "users.passwordChangeable",
  "users.passwordExpires",
  "users.passwordRequired",
  "users.status",
  "users.lastChanged",
  "users.buildInAdmin",
  "users.email",
  "users.type",
  "userInGroups.groupName",
  "userInGroups.domainName",
  "userInGroups.userName",
  "userInGroups.adminGroup",
  "userInGroups.lastChanged",
  "portConnectors.caption",
  "portConnectors.lastChanged",
  "portConnectors.maxSpeed",
  "portConnectors.connectorType",
  "portConnectors.internalReferenceDesignator",
  "portConnectors.type",
  "portConnectors.availability",
  "portConnectors.configManagerErrorCode",
  "portConnectors.configManagerUserConfig",
  "portConnectors.osAutoDiscovered",
  "portConnectors.powerManagementSupported",
  "portConnectors.protocolSupported",
  "portConnectors.deviceId",
  "portConnectors.maxBaudRate",
  "portConnectors.maximumInputBufferSize",
  "portConnectors.maximumOutputBufferSize",
  "portConnectors.providerType",
  "portConnectors.portConnectorType",
  "portConnectors.externalReferenceDesignator",
  "portConnectors.isBinary",
  "processors.type",
  "processors.maxClockSpeed",
  "processors.l2CacheSize",
  "processors.numberOfCores",
  "processors.lastChanged",
  "processors.family",
  "processors.manufacturer",
  "processors.externalClock",
  "processors.status",
  "processors.serialNumber",
  "processors.socket",
  "processors.name",
  "processors.addressWidth",
  "processors.architecture",
  "processors.caption",
  "processors.l2CacheSpeed",
  "processors.numberOfLogicalProcessors",
  "processors.availability",
  "processors.dataWidth",
  "processors.deviceId",
  "processors.id",
  "processors.level",
  "processors.revision",
  "processors.upgradeMethod",
  "processors.version",
  "processors.voltageCaps",
  "processors.addressSizes",
  "processors.bogoMips",
  "processors.byteOrder",
  "processors.currentClockSpeed",
  "processors.currentSpeed",
  "processors.l1dCacheSize",
  "processors.l1iCacheSize",
  "processors.l3CacheSize",
  "processors.minimumClockSpeed",
  "processors.model",
  "processors.modelType",
  "processors.opModes",
  "processors.processorId",
  "processors.stepping",
  "processors.threadsPerCore",
  "processors.virtualization",
  "processors.voltage",
  "printers.capabilityDescriptions",
  "printers.caption",
  "printers.enableBidi",
  "printers.horizontalResolution",
  "printers.local",
  "printers.location",
  "printers.network",
  "printers.portName",
  "printers.shareName",
  "printers.status",
  "printers.verticalResolution",
  "printers.lastChanged",
  "assetCustom.model",
  "assetCustom.modelNumber",
  "assetCustom.firmwareVersion",
  "assetCustom.orderNumber",
  "assetCustom.purchaseDate",
  "assetCustom.warrantyDate",
  "assetCustom.lastPatched",
  "assetCustom.lastFullBackup",
  "assetCustom.lastFullImage",
  "assetCustom.comment",
  "assetCustom.location",
  "assetCustom.building",
  "assetCustom.department",
  "assetCustom.branchOffice",
  "assetCustom.barCode",
  "assetCustom.contact",
  "assetCustom.manufacturer",
  "assetCustom.httpTitle",
  "assetCustom.httpServer",
  "assetCustom.httpsServer",
  "assetCustom.ftpHeader",
  "assetCustom.serialNumber",
  "assetCustom.dnsName",
  "assetCustom.sshServer",
  "assetCustom.sku",
  "assetCustom.stateKey",
  "assetCustom.hardwareVersion",
  "assetCustom.softwareVersion",
  "assetCustom.deviceVersion",
  "assetCustom.stateName",
  "assetCustom.fields.value",
  "assetCustom.fields.fieldKey",
  "assetCustom.fields.name",
  "assetCustom.lastChanged",
  "baseboards.manufacturer",
  "baseboards.product",
  "baseboards.serialNumber",
  "baseboards.version",
  "baseboards.locationInChassis",
  "baseboards.type",
  "baseboards.lastChanged",
  "baseboards.hostingBoard",
  "batteries.capacityMultiplier",
  "batteries.chemistry",
  "batteries.designCapacity",
  "batteries.designVoltage",
  "batteries.deviceId",
  "batteries.location",
  "batteries.manufactureDate",
  "batteries.manufacturer",
  "batteries.maxBatteryError",
  "batteries.name",
  "batteries.smartBatteryVersion",
  "batteries.lastChanged",
  "batteries.availability",
  "batteries.powerManagementCapabilities",
  "batteries.powerManagementSupported",
  "batteries.status",
  "batteries.portable",
  "graphicsCards.caption",
  "graphicsCards.manufacturer",
  "graphicsCards.subSystemName",
  "graphicsCards.subSystemManufacturer",
  "graphicsCards.type",
  "graphicsCards.deviceId",
  "graphicsCards.lastChanged",
  "graphicsCards.adapterCompatibility",
  "graphicsCards.adapterRam",
  "graphicsCards.availability",
  "graphicsCards.currentBitsPerPixel",
  "graphicsCards.currentHorizontalResolution",
  "graphicsCards.currentNumberOfColors",
  "graphicsCards.currentRefreshRate",
  "graphicsCards.currentScanMode",
  "graphicsCards.currentVerticalResolution",
  "graphicsCards.deviceSpecificPens",
  "graphicsCards.driverVersion",
  "graphicsCards.maxRefreshRate",
  "graphicsCards.minRefreshRate",
  "graphicsCards.monochrome",
  "graphicsCards.numberOfColorPlanes",
  "graphicsCards.videoArchitecture",
  "graphicsCards.videoMemoryType",
  "graphicsCards.videoModeDescription",
  "usbDevices.name",
  "usbDevices.manufacturer",
  "usbDevices.deviceId",
  "usbDevices.lastChanged",
  "usbDevices.caption",
  "usbDevices.pnpClass",
  "usbDevices.service",
  "usbDevices.pnpDeviceId",
  "usbDevices.status",
  "usbDevices.description",
  "usbDevices.present",
  "usbControllers.caption",
  "usbControllers.manufacturer",
  "usbControllers.supportedProtocol",
  "usbControllers.lastChanged",
  "tapeDrives.availability",
  "tapeDrives.capability",
  "tapeDrives.caption",
  "tapeDrives.compression",
  "tapeDrives.defaultBlockSize",
  "tapeDrives.manufacturer",
  "tapeDrives.maxBlockSize",
  "tapeDrives.maxMediaSize",
  "tapeDrives.maxPartitionCount",
  "tapeDrives.mediaType",
  "tapeDrives.minBlockSize",
  "tapeDrives.needsCleaning",
  "tapeDrives.numberOfMediaSupported",
  "tapeDrives.padding",
  "tapeDrives.lastChanged",
  "systemEnclosures.manufacturer",
  "systemEnclosures.securityStatus",
  "systemEnclosures.serialNumber",
  "systemEnclosures.smbiosAssetTag",
  "systemEnclosures.version",
  "systemEnclosures.chassisName",
  "systemEnclosures.lastChanged",
  "systemEnclosures.machineModel",
  "systemEnclosures.machineName",
  "systemEnclosures.smcVersionSystem",
  "systemEnclosures.platformUUID",
  "systemEnclosures.lockPresent",
  "pointingDevices.caption",
  "pointingDevices.deviceInterface",
  "pointingDevices.manufacturer",
  "pointingDevices.numberOfButtons",
  "pointingDevices.pointingType",
  "pointingDevices.lastChanged",
  "pcmciaControllers.caption",
  "pcmciaControllers.manufacturer",
  "pcmciaControllers.protocolSupported",
  "pcmciaControllers.lastChanged",
  "pcmciaControllers.errorCode",
  "pcmciaControllers.userConfig",
  "networks.broadCast",
  "networks.defaultGateway",
  "networks.deleteOnTermination",
  "networks.ipAddressV4",
  "networks.ipAddressV6",
  "networks.linkEncap",
  "networks.scope",
  "networks.subnetMask",
  "networks.macAddress",
  "networks.serviceName",
  "networks.lastChanged",
  "networks.iPv6Prefix",
  "networks.serviceOrder",
  "networks.sourceDestCheck",
  "networks.type",
  "networks.databasePath",
  "networks.description",
  "networks.dhcpEnabled",
  "networks.dhcpServer",
  "networks.dnsDomain",
  "networks.dnsDomainSuffixSearchOrder",
  "networks.dnsEnabledForWinsResolution",
  "networks.dnsHostName",
  "networks.dnsServerSearchOrder",
  "networks.domainDnsRegistrationEnabled",
  "networks.fullDnsRegistrationEnabled",
  "networks.gatewayCostMetric",
  "networks.ipConnectionMetric",
  "networks.ipEnabled",
  "networks.ipFilterSecurityEnabled",
  "networks.ipPortSecurityEnabled",
  "networks.ipSecPermitIpProtocols",
  "networks.ipSecPermitTcpPorts",
  "networks.tcpIpNetbiosOptions",
  "networks.winsEnableLmHostsLookUp",
  "networks.winsPrimaryserver",
  "networks.winsSecondaryServer",
  "networks.state",
  "networks.tags",
  "networks.region",
  "networks.requesterManaged",
  "networks.isAcceleratedNetworkingEnabled",
  "networks.isIpForwardingEnabled",
  "networks.isPrimaryNetworkInterface",
  "networks.internalDnsNameLabel",
  "networks.internalDomainNameSuffix",
  "networks.internalFqdn",
  "networks.dnsServers",
  "networks.appliedDnsServers",
  "networks.attachTime",
  "networks.configuration.name",
  "networks.configuration.state",
  "networks.configuration.privateIpAddress",
  "networks.configuration.privateIpAddressVersion",
  "networks.configuration.privateIpAlLocationMethod",
  "networks.configuration.isPrimary",
  "networks.configuration.publicIpAddress",
  "networks.configuration.publicIpAddressVersion",
  "networks.configuration.publicIpAlLocationMethod",
  "networks.configuration.fqdn",
  "networks.configuration.reverseFqdn",
  "networks.configuration.leafDomainLabel",
  "networks.configuration.idleTimeoutInMinutes",
  "networks.configuration.hasAssignedLoadBalancer",
  "networks.internalKey",
  "networks.speed",
  "networks.mtu",
  "networks.networkInterfaceId",
  "networks.connection.key",
  "networks.connection.lastSeen",
  "networks.group",
  "networks.master",
  "networks.qDisc",
  "monitors.manufacturer",
  "monitors.manufactureDate",
  "monitors.model",
  "monitors.serialNumber",
  "monitors.lastChanged",
  "monitors.name",
  "monitors.deviceType",
  "monitors.displayType",
  "monitors.builtIn",
  "monitors.depth",
  "monitors.main",
  "monitors.mirror",
  "monitors.online",
  "monitors.resolution",
  "monitors.coreImage",
  "monitors.quartzExtreme",
  "monitors.deviceId",
  "monitors.pixelsPerXLogicalInch",
  "monitors.pixelsPerYLogicalInch",
  "monitors.pnpDeviceId",
  "networkAdapters.macAddress",
  "networkAdapters.manufacturer",
  "networkAdapters.name",
  "networkAdapters.netConnectionId",
  "networkAdapters.netEnabled",
  "networkAdapters.speed",
  "networkAdapters.lastChanged",
  "registries.registryPath",
  "registries.valueName",
  "registries.value",
  "registries.lastChanged",
  "securityGroups.description",
  "securityGroups.groupId",
  "securityGroups.lastChanged",
  "securityGroups.name",
  "securityGroups.ownerId",
  "securityGroups.permissions.fromPort",
  "securityGroups.permissions.ipProtocol",
  "securityGroups.permissions.ipRanges.cidrIp",
  "securityGroups.permissions.ipRanges.description",
  "securityGroups.permissions.ipRanges.lastChanged",
  "securityGroups.permissions.isInbound",
  "securityGroups.permissions.lastChanged",
  "securityGroups.permissions.toPort",
  "serialNumbers.product",
  "serialNumbers.productIdentity",
  "serialNumbers.productKey",
  "serialNumbers.lastChanged",
  "soundDevices.caption",
  "soundDevices.manufacturer",
  "soundDevices.lastChanged",
  "tpms.isActivatedInitialValue",
  "tpms.isEnabledInitialValue",
  "tpms.isOwnedInitialValue",
  "tpms.specVersion",
  "tpms.manufacturerVersion",
  "tpms.manufacturerVersionInfo",
  "tpms.physicalPresenceVersionInfo",
  "tpms.lastChanged",
  "tpms.family",
  "tpms.firmwareVersion",
  "tpms.manufacturerCode",
  "tpms.specLevel",
  "tpms.modelNumber",
  "tpms.vendorSpecific",
  "shares.caption",
  "shares.name",
  "shares.path",
  "shares.type",
  "shares.hash",
  "shares.lastChanged",
  "shares.sharePermissions.trustee",
  "shares.sharePermissions.readAccess",
  "shares.sharePermissions.writeAccess",
  "shares.sharePermissions.fullAccess",
  "shares.sharePermissions.denyAccess",
  "shares.sharePermissions.lastChanged",
  "logicalDisks.fileSystem",
  "logicalDisks.freeSpace",
  "logicalDisks.size",
  "logicalDisks.mountedOn",
  "logicalDisks.lastChanged",
  "logicalDisks.caption",
  "logicalDisks.compressed",
  "logicalDisks.description",
  "logicalDisks.driveType",
  "logicalDisks.volumeName",
  "logicalDisks.volumeSerialNumber",
  "logicalDisks.diskType",
  "logicalDisks.isWriteAcceleratorEnabled",
  "logicalDisks.isDiskEncryptionEnabled",
  "logicalDisks.cachingType",
  "logicalDisks.region",
  "logicalDisks.tags",
  "logicalDisks.state",
  "logicalDisks.creationMethod",
  "logicalDisks.osType",
  "logicalDisks.storageAccountType",
  "logicalDisks.creationSourceType",
  "logicalDisks.timeCreated",
  "logicalDisks.zone",
  "logicalDisks.url",
  "logicalDisks.datastoreKey",
  "deviceActionResults.actionName",
  "deviceActionResults.actionState",
  "deviceActionResults.lastUpdatedDateTime",
  "deviceApplications.deviceCount",
  "deviceApplications.displayName",
  "deviceApplications.intuneId",
  "deviceApplications.sizeInByte",
  "deviceApplications.version",
  "diskPartitions.size",
  "diskPartitions.available",
  "diskPartitions.fileSystem",
  "diskPartitions.mountedOn",
  "diskPartitions.used",
  "diskPartitions.lastChanged",
  "diskPartitions.blockSize",
  "diskPartitions.bootable",
  "diskPartitions.bootPartition",
  "diskPartitions.diskIndex",
  "diskPartitions.index",
  "diskPartitions.numberOfBlocks",
  "diskPartitions.primaryPartition",
  "diskPartitions.startingOffset",
  "diskPartitions.type",
  "hardDisks.bytesPerSector",
  "hardDisks.firmwareRevision",
  "hardDisks.interfaceType",
  "hardDisks.manufacturer",
  "hardDisks.model",
  "hardDisks.name",
  "hardDisks.partitions",
  "hardDisks.sectorsPerTrack",
  "hardDisks.serialNumber",
  "hardDisks.size",
  "hardDisks.status",
  "hardDisks.totalCylinders",
  "hardDisks.totalHeads",
  "hardDisks.totalSectors",
  "hardDisks.totalTracks",
  "hardDisks.tracksPerCylinder",
  "hardDisks.lastChanged",
  "hardDisks.hctl",
  "hardDisks.hotplug",
  "hardDisks.majmin",
  "keyboards.caption",
  "keyboards.configManagerErrorCode",
  "keyboards.configManagerUserConfig",
  "keyboards.description",
  "keyboards.layout",
  "keyboards.numberOfFunctionKeys",
  "keyboards.lastChanged",
  "pciCards.name",
  "pciCards.manufacturer",
  "pciCards.type",
  "pciCards.deviceId",
  "pciCards.subSystemName",
  "pciCards.subSystemManufacturer",
  "pciCards.lastChanged",
  "operatingSystemRecoveryConfigurations.autoReboot",
  "operatingSystemRecoveryConfigurations.debugFilepath",
  "operatingSystemRecoveryConfigurations.debugInfoType",
  "operatingSystemRecoveryConfigurations.kernelDumpOnly",
  "operatingSystemRecoveryConfigurations.miniDumpDirectory",
  "operatingSystemRecoveryConfigurations.overwriteExistingDebugFile",
  "operatingSystemRecoveryConfigurations.sendAdminAlert",
  "operatingSystemRecoveryConfigurations.writeDebugInfo",
  "operatingSystemRecoveryConfigurations.writeToSystemlog",
  "operatingSystemRecoveryConfigurations.lastChanged",
  "otData.busConfig.children",
  "otData.busConfig.isMainModule",
  "otData.busConfig.name",
  "otData.busConfig.number",
  "otData.busConfig.parent",
  "otData.busConfig.size",
  "otData.busConfig.slotNumber",
  "otData.busConfig.slotWidth",
  "otData.busConfig.startIndex",
  "otData.busConfig.type",
  "otData.extendedInfo.name",
  "otData.extendedInfo.value",
  "otData.firmwareHistory.firmware",
  "otData.firmwareHistory.from",
  "otData.firmwareHistory.to",
  "otData.firmwareVersion",
  "otData.isMainModule",
  "otData.isNetworkNode",
  "otData.moduleType",
  "otData.partNumber",
  "otData.routePath",
  "mobileDeviceManagement.azureADDeviceId",
  "mobileDeviceManagement.deviceCategoryDisplayName",
  "mobileDeviceManagement.deviceEnrollmentType",
  "mobileDeviceManagement.deviceName",
  "mobileDeviceManagement.deviceRegistrationState",
  "mobileDeviceManagement.easActivationDateTime",
  "mobileDeviceManagement.easDeviceId",
  "mobileDeviceManagement.emailAddress",
  "mobileDeviceManagement.freeStorageSpaceInBytes",
  "mobileDeviceManagement.imei",
  "mobileDeviceManagement.intuneId",
  "mobileDeviceManagement.isAzureADRegistered",
  "mobileDeviceManagement.isEasActivated",
  "mobileDeviceManagement.isEncrypted",
  "mobileDeviceManagement.isSupervised",
  "mobileDeviceManagement.lastSyncDateTime",
  "mobileDeviceManagement.managedDeviceOwnerType",
  "mobileDeviceManagement.manufacturer",
  "mobileDeviceManagement.model",
  "mobileDeviceManagement.operatingSystem",
  "mobileDeviceManagement.osVersion",
  "mobileDeviceManagement.safeMode",
  "mobileDeviceManagement.serialNumber",
  "mobileDeviceManagement.subscriberCarrier",
  "mobileDeviceManagement.totalStorageSpaceInBytes",
  "mobileDeviceManagement.userDisplayName",
  "mobileDeviceManagement.userId",
  "mobileDeviceManagement.userPrincipalName",
  "mobileDeviceManagement.virtualSecureMode",
  "mobileDeviceManagement.wiFiMacAddress",
  "mobileDeviceManagement.windowsPE",
  "mobileDeviceManagement.container.intuneAccount",
  "mobileDeviceManagement.container.appId",
  "modems.attachedTo",
  "modems.caption",
  "modems.countryselected",
  "modems.externalModem",
  "modems.maxBaudRateToPhone",
  "modems.maxBaudRateToSerialPort",
  "modems.providerName",
  "modems.lastChanged",
  "quickFixEngineerings.installedOn",
  "quickFixEngineerings.description",
  "quickFixEngineerings.hotFixId",
  "quickFixEngineerings.installedBy",
  "quickFixEngineerings.lastChanged",
  "siteId",
  "snmpInfos.interfaceIndex",
  "snmpInfos.interfaceDescription",
  "snmpInfos.interfaceMtu",
  "snmpInfos.interfaceSpeed",
  "snmpInfos.interfaceIpAddress",
  "snmpInfos.interfaceMask",
  "snmpInfos.interfaceMacAddress",
  "snmpInfos.interfaceAdminStatus",
  "snmpInfos.interfaceOperStatus",
  "snmpInfos.upLink",
  "snmpInfos.portName",
  "snmpInfos.vLan",
  "snmpInfos.interfaceName",
  "snmpInfos.interfaceAlias",
  "snmpInfos.defaultGateway",
  "snmpInfos.lastChanged",
  "sourceExternalId",
  "sqlServers.dataPath",
  "sqlServers.fileVersion",
  "sqlServers.installPath",
  "sqlServers.isWow64",
  "sqlServers.skuName",
  "sqlServers.spLevel",
  "sqlServers.version",
  "sqlServers.displayVersion",
  "sqlServers.serviceName",
  "sqlServers.authentication",
  "sqlServers.isClustered",
  "sqlServers.instanceId",
  "sqlServers.instanceName",
  "sqlServers.language",
  "sqlServers.lastChanged",
  "sqlServers.databases.dataFilesSizeKb",
  "sqlServers.databases.logFilesSizeKb",
  "sqlServers.databases.logFilesUsedSizeKb",
  "sqlServers.databases.name",
  "sqlServers.databases.lastChanged",
  "sqlServers.services.state",
  "sqlServers.services.startupType",
  "sqlServers.services.name",
  "sqlServers.cluster.nodes",
  "sqlServers.cluster.name",
  "tonerInformation.tonerNr",
  "tonerInformation.tonerName",
  "tonerInformation.tonerColorName",
  "tonerInformation.tonerColorNr",
  "tonerInformation.tonerMaximum",
  "tonerInformation.tonerRemaining",
  "tonerInformation.lastChanged",
  "ups.manufacturer",
  "ups.model",
  "ups.upsSoftwareVersion",
  "ups.agentSoftwareVersion",
  "ups.name",
  "ups.attachedDevices",
  "ups.batteryStatus",
  "ups.secondsOnBattery",
  "ups.estimatedMinutesRemaining",
  "ups.estimatedChargeRemaining",
  "ups.batteryVoltage",
  "ups.batteryCurrent",
  "ups.batteryTemperature",
  "ups.alarmsPresent",
  "ups.lastChanged",
  "vulnerabilities.cve",
  "warranties.lastWarrantyTry",
  "warranties.lastWarrantySuccess",
  "warranties.purchaseCountry",
  "warranties.shipDate",
  "warranties.forceUpdate",
  "warranties.error",
  "warranties.details.startDate",
  "warranties.details.endDate",
  "warranties.details.serviceType",
  "warranties.details.lastChanged",
  "printerInfo.totalPages",
  "printerInfo.status",
  "printerInfo.totalColorPages",
  "printerInfo.totalMonoPages",
  "bioses.manufacturer",
  "bioses.releaseDate",
  "bioses.version",
  "bioses.address",
  "bioses.runTimeSize",
  "bioses.romSize",
  "bioses.lastChanged",
  "bioses.biosCharacteristics",
  "bioses.caption",
  "bioses.currentLanguage",
  "bioses.installableLanguage",
  "bioses.primaryBios",
  "bioses.serialNumber",
  "bioses.smbiosBiosVersion",
  "bioses.smbiosMajorVersion",
  "bioses.smbiosMinorVersion",
  "bioses.smbiosPresent",
  "autoruns.command",
  "autoruns.commandName",
  "autoruns.location",
  "autoruns.lastChanged",
  "antiviruses.name",
  "antiviruses.enabled",
  "antiviruses.upToDate",
  "antiviruses.lastChanged",
  "scsiControllers.availability",
  "scsiControllers.protocolSupported",
  "scsiControllers.caption",
  "scsiControllers.manufacturer",
  "scsiControllers.lastChanged",
  "errors.type",
  "errors.text",
  "errors.lastChanged",
  "fileProperties.found",
  "fileProperties.pathfull",
  "fileProperties.version",
  "fileProperties.companyName",
  "fileProperties.size",
  "fileProperties.lastChanged",
  "fileProperties.creationDate",
  "fileProperties.lastAccessed",
  "fileProperties.lastModified",
  "features.name",
  "features.caption",
  "features.addedDate",
  "features.lastChanged",
  "ideControllers.caption",
  "ideControllers.manufacturer",
  "ideControllers.protocolSupported",
  "ideControllers.lastChanged",
  "assetGroups.assetGroupKey",
  "assetGroups.name",
  "assetGroups.dynamic",
  "airWatchDevice.udId",
  "airWatchDevice.uuid",
  "airWatchDevice.assetNumber",
  "airWatchDevice.availablePhysicalMemory",
  "airWatchDevice.batteryLevel",
  "airWatchDevice.complianceStatus",
  "airWatchDevice.compromisedStatus",
  "airWatchDevice.mobileCountryCode",
  "airWatchDevice.deviceFriendlyName",
  "airWatchDevice.deviceId",
  "airWatchDevice.enrollmentStatus",
  "airWatchDevice.imei",
  "airWatchDevice.isActivationLockEnabled",
  "airWatchDevice.isCloudBackupEnabled",
  "airWatchDevice.isDeviceDNDEnabled",
  "airWatchDevice.isDeviceLocatorEnabled",
  "airWatchDevice.isNetworkTethered",
  "airWatchDevice.isRoaming",
  "airWatchDevice.isSupervised",
  "airWatchDevice.lastChanged",
  "airWatchDevice.lastComplianceCheckOn",
  "airWatchDevice.lastCompromisedCheckOn",
  "airWatchDevice.lastEnrolledOn",
  "airWatchDevice.locationGroupName",
  "airWatchDevice.model",
  "airWatchDevice.ownership",
  "airWatchDevice.phoneNumber",
  "airWatchDevice.platform",
  "airWatchDevice.processorArchitecture",
  "airWatchDevice.serialNumber",
  "airWatchDevice.simMobileCountryCode",
  "airWatchDevice.systemIntegrityProtectionEnabled",
  "airWatchDevice.totalPhysicalMemory",
  "airWatchDevice.userName",
  "airWatchDevice.userEmailAddress",
  "airWatchDevice.virtualMemory",
  "airWatchDevice.osVersion",
  "airWatchApplications.name",
  "airWatchApplications.version",
  "airWatchApplications.buildVersion",
  "airWatchApplications.status",
  "airWatchApplications.size",
  "airWatchApplications.applicationIdentifier",
  "airWatchApplications.type",
  "airWatchApplications.isManaged",
  "airWatchApplications.lastChanged",
  "airWatchOrganizationGroup.name",
  "airWatchOrganizationGroup.organizationGroupId",
  "airWatchOrganizationGroup.locationGroupType",
  "airWatchOrganizationGroup.country",
  "airWatchOrganizationGroup.locale",
  "airWatchOrganizationGroup.createdOn",
  "airWatchOrganizationGroup.users",
  "airWatchOrganizationGroup.admins",
  "airWatchOrganizationGroup.devices",
  "airWatchOrganizationGroup.lgLevel",
  "airWatchOrganizationGroup.uuid",
  "airWatchOrganizationGroup.lastChanged",
  "ipLocation.ipLocation",
  "ipLocation.realStart",
  "ipLocation.realEnd",
  "ipLocation.packageShare",
  "ipLocation.shareUserName",
  "ipLocation.sharePassword",
  "ipLocation.shareKeyHash",
  "ipLocation.startIp",
  "ipLocation.endIp",
  "citrixGuestInfo.extraInfo.key",
  "citrixGuestInfo.extraInfo.type",
  "citrixGuestInfo.extraInfo.value",
  "citrixGuestInfo.lastChanged",
  "citrixGuestInfo.live",
  "citrixGuestInfo.memorySize",
  "citrixGuestInfo.name",
  "citrixGuestInfo.numberOfCores",
  "citrixGuestInfo.state",
  "citrixGuestInfo.virtualBlockDevices.bootable",
  "citrixGuestInfo.virtualBlockDevices.currentlyAttached",
  "citrixGuestInfo.virtualBlockDevices.device",
  "citrixGuestInfo.virtualBlockDevices.empty",
  "citrixGuestInfo.virtualBlockDevices.mode",
  "citrixGuestInfo.virtualBlockDevices.qosAlgorithmParameters",
  "citrixGuestInfo.virtualBlockDevices.qosAlgorithmType",
  "citrixGuestInfo.virtualBlockDevices.qosSupportedAlgorithms",
  "citrixGuestInfo.virtualBlockDevices.runtimeProperties",
  "citrixGuestInfo.virtualBlockDevices.statusCode",
  "citrixGuestInfo.virtualBlockDevices.statusDetails",
  "citrixGuestInfo.virtualBlockDevices.storageLock",
  "citrixGuestInfo.virtualBlockDevices.type",
  "citrixGuestInfo.virtualBlockDevices.unpluggable",
  "citrixGuestInfo.virtualBlockDevices.userDevice",
  "citrixGuestInfo.virtualBlockDevices.virtualDiskImages.allowCaching",
  "citrixGuestInfo.virtualBlockDevices.virtualDiskImages.description",
  "citrixGuestInfo.virtualBlockDevices.virtualDiskImages.isASnapshot",
  "citrixGuestInfo.virtualBlockDevices.virtualDiskImages.location",
  "citrixGuestInfo.virtualBlockDevices.virtualDiskImages.managed",
  "citrixGuestInfo.virtualBlockDevices.virtualDiskImages.metaDataLatest",
  "citrixGuestInfo.virtualBlockDevices.virtualDiskImages.missing",
  "citrixGuestInfo.virtualBlockDevices.virtualDiskImages.name",
  "citrixGuestInfo.virtualBlockDevices.virtualDiskImages.onBoot",
  "citrixGuestInfo.virtualBlockDevices.virtualDiskImages.readOnly",
  "citrixGuestInfo.virtualBlockDevices.virtualDiskImages.shareable",
  "citrixGuestInfo.virtualBlockDevices.virtualDiskImages.storageLock",
  "citrixGuestInfo.virtualBlockDevices.virtualDiskImages.tags",
  "citrixGuestInfo.virtualBlockDevices.virtualDiskImages.type",
  "citrixGuestInfo.virtualBlockDevices.virtualDiskImages.used",
  "citrixGuestInfo.virtualBlockDevices.virtualDiskImages.virtualSize",
  "citrixGuestInfo.virtualInterfaces.currentlyAttached",
  "citrixGuestInfo.virtualInterfaces.defaultGateway",
  "citrixGuestInfo.virtualInterfaces.device",
  "citrixGuestInfo.virtualInterfaces.macAddress",
  "citrixGuestInfo.virtualInterfaces.macAutoGenerated",
  "citrixGuestInfo.virtualInterfaces.mtu",
  "citrixGuestInfo.virtualInterfaces.qosAlgorithmType",
  "citrixGuestInfo.virtualInterfaces.qosAlgorithms",
  "citrixGuestInfo.virtualInterfaces.statusCode",
  "citrixGuestInfo.virtualInterfaces.statusDetails",
  "citrixGuestInfo.xenServerAssetKey",
  "citrixPoolInfo.appliances.description",
  "citrixPoolInfo.appliances.name",
  "citrixPoolInfo.citrixXenServerAssetKeys",
  "citrixPoolInfo.highAvailability",
  "citrixPoolInfo.highAvailabilityAllowOvercommit",
  "citrixPoolInfo.highAvailabilityOvercommitted",
  "citrixPoolInfo.livePatching",
  "citrixPoolInfo.networks.bridge",
  "citrixPoolInfo.networks.description",
  "citrixPoolInfo.networks.mtu",
  "citrixPoolInfo.networks.serviceName",
  "citrixPoolInfo.networks.tags",
  "citrixPoolInfo.otherConfigurations.isCustomField",
  "citrixPoolInfo.otherConfigurations.key",
  "citrixPoolInfo.otherConfigurations.value",
  "citrixPoolInfo.patches.afterApplyGuidance",
  "citrixPoolInfo.patches.applied",
  "citrixPoolInfo.patches.description",
  "citrixPoolInfo.patches.name",
  "citrixPoolInfo.patches.size",
  "citrixPoolInfo.patches.version",
  "citrixPoolInfo.policyNoVendorDevice",
  "citrixPoolInfo.redoLog",
  "citrixPoolInfo.restrictions.key",
  "citrixPoolInfo.restrictions.value",
  "citrixPoolInfo.storages.clustered",
  "citrixPoolInfo.storages.contentType",
  "citrixPoolInfo.storages.description",
  "citrixPoolInfo.storages.isToolsStorage",
  "citrixPoolInfo.storages.localCache",
  "citrixPoolInfo.storages.name",
  "citrixPoolInfo.storages.size",
  "citrixPoolInfo.storages.tags",
  "citrixPoolInfo.storages.type",
  "citrixPoolInfo.storages.used",
  "citrixPoolInfo.storages.virtualAllocation",
  "citrixPoolInfo.tags",
  "citrixPoolInfo.templates",
  "citrixPoolInfo.workloadBalancing",
  "citrixPoolInfo.workloadBalancingVerifyCert",
  "citrixXenServerInfo.citrixPoolAssetKey",
  "citrixXenServerInfo.crashDumps.size",
  "citrixXenServerInfo.crashDumps.timestamp",
  "citrixXenServerInfo.description",
  "citrixXenServerInfo.edition",
  "citrixXenServerInfo.enabled",
  "citrixXenServerInfo.extraInfo.key",
  "citrixXenServerInfo.extraInfo.type",
  "citrixXenServerInfo.extraInfo.value",
  "citrixXenServerInfo.hostName",
  "citrixXenServerInfo.ipAddress",
  "citrixXenServerInfo.isMaster",
  "citrixXenServerInfo.memoryFree",
  "citrixXenServerInfo.memoryOverhead",
  "citrixXenServerInfo.memorySize",
  "citrixXenServerInfo.name",
  "citrixXenServerInfo.patches.appliedAt",
  "citrixXenServerInfo.patches.description",
  "citrixXenServerInfo.patches.name",
  "citrixXenServerInfo.patches.size",
  "citrixXenServerInfo.patches.version",
  "citrixXenServerInfo.pcis.type",
  "citrixXenServerInfo.pcis.name",
  "citrixXenServerInfo.pcis.subSystemName",
  "citrixXenServerInfo.pcis.subSystemManufacturer",
  "citrixXenServerInfo.pcis.manufacturer",
  "citrixXenServerInfo.physicalCpus.family",
  "citrixXenServerInfo.physicalCpus.flags",
  "citrixXenServerInfo.physicalCpus.model",
  "citrixXenServerInfo.physicalCpus.modelName",
  "citrixXenServerInfo.physicalCpus.numberOfCpus",
  "citrixXenServerInfo.physicalCpus.speed",
  "citrixXenServerInfo.physicalCpus.stepping",
  "citrixXenServerInfo.physicalCpus.manufacturer",
  "citrixXenServerInfo.physicalInterfaces.currentlyAttached",
  "citrixXenServerInfo.physicalInterfaces.defaultGateway",
  "citrixXenServerInfo.physicalInterfaces.deviceName",
  "citrixXenServerInfo.physicalInterfaces.disallowUnplug",
  "citrixXenServerInfo.physicalInterfaces.dnsServers",
  "citrixXenServerInfo.physicalInterfaces.ipAddress",
  "citrixXenServerInfo.physicalInterfaces.lastChanged",
  "citrixXenServerInfo.physicalInterfaces.macAddress",
  "citrixXenServerInfo.physicalInterfaces.mtu",
  "citrixXenServerInfo.physicalInterfaces.speed",
  "citrixXenServerInfo.physicalInterfaces.subnetMask",
  "citrixXenServerInfo.physicalInterfaces.vendor",
  "citrixXenServerInfo.schedulerPolicy",
  "citrixXenServerInfo.sslLegacy",
  "citrixXenServerInfo.storages.clustered",
  "citrixXenServerInfo.storages.contentType",
  "citrixXenServerInfo.storages.description",
  "citrixXenServerInfo.storages.isToolsStorage",
  "citrixXenServerInfo.storages.localCache",
  "citrixXenServerInfo.storages.name",
  "citrixXenServerInfo.storages.physicalBlockDevices.currentlyAttached",
  "citrixXenServerInfo.storages.physicalBlockDevices.location",
  "citrixXenServerInfo.storages.physicalBlockDevices.type",
  "citrixXenServerInfo.storages.physicalBlockDevices.userName",
  "citrixXenServerInfo.storages.physicalBlockDevices.version",
  "citrixXenServerInfo.storages.size",
  "citrixXenServerInfo.storages.tags",
  "citrixXenServerInfo.storages.type",
  "citrixXenServerInfo.storages.used",
  "citrixXenServerInfo.storages.virtualAllocation",
  "citrixXenServerInfo.storages.virtualDiskImages.allowCaching",
  "citrixXenServerInfo.storages.virtualDiskImages.description",
  "citrixXenServerInfo.storages.virtualDiskImages.isASnapshot",
  "citrixXenServerInfo.storages.virtualDiskImages.location",
  "citrixXenServerInfo.storages.virtualDiskImages.managed",
  "citrixXenServerInfo.storages.virtualDiskImages.metaDataLatest",
  "citrixXenServerInfo.storages.virtualDiskImages.missing",
  "citrixXenServerInfo.storages.virtualDiskImages.name",
  "citrixXenServerInfo.storages.virtualDiskImages.onBoot",
  "citrixXenServerInfo.storages.virtualDiskImages.readOnly",
  "citrixXenServerInfo.storages.virtualDiskImages.shareable",
  "citrixXenServerInfo.storages.virtualDiskImages.storageLock",
  "citrixXenServerInfo.storages.virtualDiskImages.tags",
  "citrixXenServerInfo.storages.virtualDiskImages.type",
  "citrixXenServerInfo.storages.virtualDiskImages.used",
  "citrixXenServerInfo.storages.virtualDiskImages.virtualSize",
  "cloudAssetCustom.acquisitionType",
  "cloudAssetCustom.costCenter",
  "cloudAssetCustom.industry",
  "cloudAssetCustom.invoiceNumber",
  "cloudAssetCustom.owner",
  "cloudAssetCustom.purchaseOrderDate",
  "cloudAssetCustom.vendorName",
  "computerSystems.manufacturer",
  "computerSystems.productName",
  "computerSystems.sku",
  "computerSystems.serial",
  "computerSystems.lastChanged",
  "computerSystems.adminPasswordStatus",
  "computerSystems.automaticResetBootOption",
  "computerSystems.automaticResetCapability",
  "computerSystems.bootRomSupported",
  "computerSystems.bootOptionOnLimit",
  "computerSystems.bootOptionOnWatchDog",
  "computerSystems.chassisBootupState",
  "computerSystems.currentTimeZone",
  "computerSystems.daylightInEffect",
  "computerSystems.enableDaylightSavingsTime",
  "computerSystems.frontPanelResetStatus",
  "computerSystems.infraredSupported",
  "computerSystems.keyboardPasswordStatus",
  "computerSystems.model",
  "computerSystems.networkServerModeEnabled",
  "computerSystems.partOfDomain",
  "computerSystems.pauseAfterReset",
  "computerSystems.powerOnPasswordStatus",
  "computerSystems.powerState",
  "computerSystems.powerSupplyState",
  "computerSystems.resetCapability",
  "computerSystems.resetCount",
  "computerSystems.resetLimit",
  "computerSystems.role",
  "computerSystems.systemType",
  "computerSystems.thermalState",
  "computerSystems.wakeupType",
  "computerSystems.domainRole",
  "virtualMachine.numberOfDisks",
  "virtualMachine.memorySize",
  "virtualMachine.numberOfCores",
  "virtualMachine.name",
  "virtualMachine.isRunning",
  "virtualMachine.toolsRunningStatus",
  "virtualMachine.toolsVersion",
  "virtualMachine.toolsVersionStatus",
  "virtualMachine.esxiKey",
  "virtualMachine.bootTime",
  "virtualMachine.guestFullName",
  "virtualMachine.hostName",
  "virtualMachine.version",
  "virtualMachine.ipv4Address",
  "virtualMachine.numEthernetCards",
  "virtualMachine.internalKey",
  "virtualMachine.guestSnapshots.internalKey",
  "virtualMachine.guestSnapshots.name",
  "virtualMachine.guestSnapshots.createTime",
  "virtualMachine.lastChanged",
  "virtualMachine.biosVersion",
  "virtualMachine.biosDate",
  "virtualMachine.numCpuCores",
  "virtualMachine.numCpuPkgs",
  "virtualMachine.numCpuThreads",
  "virtualMachine.adminDisabled",
  "virtualMachine.dnsAddresses",
  "virtualMachine.defaultGateway",
  "virtualMachine.domainName",
  "virtualMachine.dhcp",
  "virtualMachine.connectionState",
  "virtualMachine.powerState",
  "virtualMachine.upTime",
  "virtualMachine.hostMaxVirtualDiskCapacity",
  "virtualMachine.ipAddress",
  "virtualMachine.port",
  "virtualMachine.sslThumbprint",
  "virtualMachine.managementServerIp",
  "virtualMachine.vendor",
  "virtualMachine.model",
  "virtualMachine.cpuModel",
  "virtualMachine.cpuMhz",
  "virtualMachine.cpuPackagesDescriptions",
  "virtualMachine.numNics",
  "virtualMachine.numHbas",
  "virtualMachine.serial",
  "virtualMachine.dataCenterKey",
  "virtualMachine.vmwareServerId",
  "virtualMachine.bootDiagnosticsStorageUri",
  "virtualMachine.diskImageOffer",
  "virtualMachine.diskImagePublisher",
  "virtualMachine.diskImageSku",
  "virtualMachine.diskImageVersion",
  "virtualMachine.isBootDiagnosticsEnabled",
  "virtualMachine.isManagedDiskEnabled",
  "virtualMachine.isManagedServiceIdentityEnabled",
  "virtualMachine.licenseType",
  "virtualMachine.lifeCycle",
  "virtualMachine.managedServiceIdentityType",
  "virtualMachine.maxDataDiskCount",
  "virtualMachine.state",
  "virtualMachine.region",
  "virtualMachine.resourceDiskSizeInMb",
  "virtualMachine.size",
  "virtualMachine.tags.key",
  "virtualMachine.tags.value",
  "virtualMachine.resourceGroupKey",
  "virtualMachine.assetKey",
  "virtualMachine.architecture",
  "virtualMachine.availabilityZone",
  "virtualMachine.ami.architecture",
  "virtualMachine.ami.creationDate",
  "virtualMachine.ami.description",
  "virtualMachine.ami.enaSupport",
  "virtualMachine.ami.hypervisor",
  "virtualMachine.ami.imageId",
  "virtualMachine.ami.imageLocation",
  "virtualMachine.ami.imageOwnerAlias",
  "virtualMachine.ami.imageType",
  "virtualMachine.ami.lastChanged",
  "virtualMachine.ami.name",
  "virtualMachine.ami.ownerId",
  "virtualMachine.ami.platform",
  "virtualMachine.ami.public",
  "virtualMachine.ami.rootDeviceName",
  "virtualMachine.ami.rootDeviceType",
  "virtualMachine.ami.sriovNetSupport",
  "virtualMachine.ami.state",
  "virtualMachine.ami.stateReason",
  "virtualMachine.ami.virtualizationType",
  "virtualMachine.host.autoPlacement",
  "virtualMachine.host.availabilityZone",
  "virtualMachine.host.availableCapacity",
  "virtualMachine.host.availableVCpus",
  "virtualMachine.host.cores",
  "virtualMachine.host.hostId",
  "virtualMachine.host.instanceType",
  "virtualMachine.host.lastChanged",
  "virtualMachine.host.releaseTime",
  "virtualMachine.host.sockets",
  "virtualMachine.host.state",
  "virtualMachine.host.totalCapacity",
  "virtualMachine.host.totalVCpus",
  "virtualMachine.coreCount",
  "virtualMachine.cpuCredits",
  "virtualMachine.elasticGpu.health",
  "virtualMachine.elasticGpu.state",
  "virtualMachine.elasticGpu.type",
  "virtualMachine.enaSupport",
  "virtualMachine.environment",
  "virtualMachine.groupName",
  "virtualMachine.hyperVisor",
  "virtualMachine.imageId",
  "virtualMachine.instanceId",
  "virtualMachine.instanceProfileArn",
  "virtualMachine.instanceType",
  "virtualMachine.kernel",
  "virtualMachine.keyPairName",
  "virtualMachine.launchTime",
  "virtualMachine.platform",
  "virtualMachine.privateDNSName",
  "virtualMachine.privateIPAddress",
  "virtualMachine.productCode.id",
  "virtualMachine.productCode.type",
  "virtualMachine.publicDnsName",
  "virtualMachine.publicIpAddress",
  "virtualMachine.ramdiskId",
  "virtualMachine.rootDeviceName",
  "virtualMachine.rootDeviceType",
  "virtualMachine.securityGroupKeys",
  "virtualMachine.sourceDestCheck",
  "virtualMachine.sriovNetSupport",
  "virtualMachine.stateReason",
  "virtualMachine.stateTransitionReason",
  "virtualMachine.subnetKey",
  "virtualMachine.threadsPercore",
  "virtualMachine.virtualizationType",
  "virtualMachine.virtualNetworkKey",
  "virtualMachine.virtualMachineExtensions.name",
  "virtualMachine.virtualMachineExtensions.type",
  "virtualMachine.virtualMachineExtensions.typeHandlerVersion",
  "vCenter.vCenterKey",
  "vCenter.dataCenter.dataCenterKey",
  "vCenter.dataCenter.name",
  "vCenter.dataCenter.internalKey",
  "hyperVGuests.name",
  "hyperVGuests.memorySize",
  "hyperVGuests.enabledState",
  "hyperVGuests.healthState",
  "hyperVGuests.guestAssetKey",
  "hyperVGuests.hostAssetKey",
  "hyperVGuests.lastChanged",
  "hyperVGuests.networks.macAddress",
  "hyperVGuests.networks.lastChanged",
  "datastoreClusters.datastoreClusterKey",
  "datastoreClusters.internalKey",
  "datastoreClusters.name",
  "datastoreClusters.freeSpace",
  "datastoreClusters.capacity",
  "datastoreClusters.drsEnabled",
  "datastoreClusters.ioLoadBalanceEnabled",
  "datastoreClusters.defaultIntraVmAffinity",
  "datastoreClusters.defaultVmBehaviour",
  "datastoreClusters.loadBalanceInterval",
  "datastoreClusters.spaceUtilizationThreshold",
  "datastoreClusters.minSpaceUtilizationDifference",
  "datastoreClusters.ioLatencyThreshold",
  "datastoreClusters.ioLoadImbalanceThreshold",
  "datastoreClusters.datastoreClusterConfigurations.name",
  "datastoreClusters.datastoreClusterConfigurations.enabled",
  "datastoreClusters.datastoreClusterOverrides.enabled",
  "datastoreClusters.datastoreClusterOverrides.behaviour",
  "datastoreClusters.datastoreClusterOverrides.intraVmAffinity",
  "datastoreClusters.datastoreClusterOverrides.intraVmAntiAffinity",
  "esxiClusters.name",
  "esxiClusters.totalCpu",
  "esxiClusters.totalMemory",
  "esxiClusters.numCpuCores",
  "esxiClusters.numCpuThreads",
  "esxiClusters.effectiveCpu",
  "esxiClusters.effectiveMemory",
  "esxiClusters.numHosts",
  "esxiClusters.numEffectiveHosts",
  "datastores.internalKey",
  "datastores.uncommitted",
  "datastores.accessible",
  "datastores.multipleHostAccess",
  "datastores.type",
  "datastores.maintenanceMode",
  "datastores.maxPhysicalRdmFileSize",
  "datastores.maxVirtualRdmFileSize",
  "datastores.maxFileSize",
  "datastores.maxVirtualDiskCapacity",
  "datastores.maxMemoryFileSize",
  "datastores.datastoreClusterKey",
  "datastores.datastoreKey",
  "relations.childAssetKey",
  "relations.comment",
  "relations.endDate",
  "relations.lastChanged",
  "relations.name",
  "relations.parentAssetKey",
  "relations.startDate",
  "resourceGroup.name",
  "resourceGroup.region",
  "resourceGroup.tags",
  "resourceGroup.state",
  "resourceGroup.key",
  "resourceGroup.assetKey",
  "resourceGroup.networkSecurityGroups.name",
  "resourceGroup.networkSecurityGroups.region",
  "resourceGroup.networkSecurityGroups.tags",
  "resourceGroup.networkSecurityGroups.state",
  "resourceGroup.networkSecurityGroups.securityRules.ruleType",
  "resourceGroup.networkSecurityGroups.securityRules.name",
  "resourceGroup.networkSecurityGroups.securityRules.state",
  "resourceGroup.networkSecurityGroups.securityRules.access",
  "resourceGroup.networkSecurityGroups.securityRules.priority",
  "resourceGroup.networkSecurityGroups.securityRules.description",
  "resourceGroup.networkSecurityGroups.securityRules.direction",
  "resourceGroup.networkSecurityGroups.securityRules.protocol",
  "resourceGroup.networkSecurityGroups.securityRules.destinationPortRange",
  "resourceGroup.networkSecurityGroups.securityRules.sourcePortRange",
  "resourceGroup.networkSecurityGroups.securityRules.destinationAddressPrefix",
  "resourceGroup.networkSecurityGroups.securityRules.sourceAddressPrefix",
  "resourceGroup.networkSecurityGroups.lastChanged",
  "resourceGroup.lastChanged",
  "resourceGroup.subscriptionId",
  "virtualNetworks.awsContainerId",
  "virtualNetworks.instanceTenancy",
  "virtualNetworks.isDefault",
  "virtualNetworks.type",
  "virtualNetworks.virtualNetworkKey",
  "virtualNetworks.vpcId",
  "virtualNetworks.name",
  "virtualNetworks.region",
  "virtualNetworks.tag",
  "virtualNetworks.state",
  "virtualNetworks.isDdosProtectionEnabled",
  "virtualNetworks.isVmProtectionEnabled",
  "virtualNetworks.subnets.name",
  "virtualNetworks.subnets.region",
  "virtualNetworks.subnets.state",
  "virtualNetworks.subnets.addressPrefix",
  "virtualNetworks.subnets.configuration.name",
  "virtualNetworks.subnets.configuration.state",
  "virtualNetworks.subnets.configuration.privateIpAddress",
  "virtualNetworks.subnets.configuration.privateIpAddressVersion",
  "virtualNetworks.subnets.configuration.privateIpAlLocationMethod",
  "virtualNetworks.subnets.configuration.isPrimary",
  "virtualNetworks.subnets.configuration.publicIpAddress",
  "virtualNetworks.subnets.configuration.publicIpAddressVersion",
  "virtualNetworks.subnets.configuration.publicIpAlLocationMethod",
  "virtualNetworks.subnets.configuration.fqdn",
  "virtualNetworks.subnets.configuration.leafDomainLabel",
  "virtualNetworks.subnets.configuration.idleTimeoutInMinutes",
  "virtualNetworks.subnets.configuration.hasAssignedLoadBalancer",
  "virtualNetworks.subnets.subnetId",
  "virtualNetworks.subnets.lastChanged",
  "virtualNetworks.subnets.mapPublicIpOnLaunch",
  "virtualNetworks.subnets.availabilityZone",
  "virtualNetworks.subnets.availableIpAddressCount",
  "virtualNetworks.subnets.defaultForaz",
  "virtualNetworks.subnets.cidrBlock",
  "virtualNetworks.subnets.ipv6CidrBlocks.ipv6CidrBlock",
  "virtualNetworks.subnets.ipv6CidrBlocks.lastChanged",
  "virtualNetworks.subnets.ipv6CidrBlocks.state",
  "virtualNetworks.serviceName",
  "virtualNetworks.macAddress",
  "virtualNetworks.ipAddressV4",
  "virtualNetworks.subnetMask",
  "virtualNetworks.lastChanged",
  "virtualNetworks.internalKey",
  "virtualNetworks.ipAddressV6",
  "virtualNetworks.speed",
  "virtualNetworks.mtu",
  "oidData.description",
  "oidData.oid",
  "oidData.value",
  "onBoardDevices.description",
  "onBoardDevices.enabled",
  "onBoardDevices.tag",
  "onBoardDevices.deviceType",
  "onBoardDevices.lastChanged",
  "vmwareProductInfo.name",
  "vmwareProductInfo.apiType",
  "vmwareProductInfo.apiVersion",
  "vmwareProductInfo.build",
  "vmwareProductInfo.fullName",
  "vmwareProductInfo.instanceUuid",
  "vmwareProductInfo.licenseProductName",
  "vmwareProductInfo.licenseProductVersion",
  "vmwareProductInfo.localebuild",
  "vmwareProductInfo.localeVersion",
  "vmwareProductInfo.operatingSystemType",
  "vmwareProductInfo.productLineId",
  "vmwareProductInfo.vendor",
  "vmwareProductInfo.version",
  "softwares.installDate",
  "softwares.lastChanged",
  "softwares.currentUser",
  "softwares.msi",
  "softwares.name",
  "softwares.publisher",
  "softwares.release",
  "softwares.operatingSystem",
  "softwares.version",
  "softwares.architecture",
  "softwares.status",
  "softwares.type",
  "softwares.error",
  "softwares.cpe",
  "softwares.unspsc",
  "softwares.category",
  "softwares.edition",
  "softwares.installType",
  "softwares.language",
  "softwares.marketVersion",
  "softwares.shortVersion",
  "monitorData.size",
  "monitorData.maxResolution",
  "monitorData.aspectRatio",
  "monitorData.responseTime",
  "monitorData.hdType",
  "monitorData.displayTech",
  "monitorData.refreshRate",
  "monitorData.panel",
  "monitorData.height",
  "monitorData.width",
  "monitorData.diagonal",
  "monitorData.hasSpeakers",
  "monitorData.hasCamera",
  "monitorData.hasUsbHub",
  "monitorData.usbUpstream",
  "monitorData.numberOfUsbUpstream",
  "monitorData.usbTypeADownstream",
  "monitorData.numberOfVga",
  "monitorData.numberOfDvi",
  "monitorData.numberOfHdmi",
  "monitorData.hdmiVersion",
  "monitorData.numberOfDisplayPorts",
  "monitorData.displayPortVersion",
  "monitorData.energyClass",
  "monitorData.sdrPer1000U",
  "monitorData.averageWattUsage",
  "monitorData.standbyWattUsage",
  "monitorData.maxWattUsage",
  "monitorData.wattUsageWhenOff",
  "monitorData.wattPowerSave",
  "monitorData.acVoltage",
  "monitorData.acFreq",
  "monitorData.current",
  "monitorData.manufacturer",
  "monitorData.model",
  "monitorData.creationDate",
  "recognitionInfo.brand",
  "recognitionInfo.model",
  "recognitionInfo.modelMetadata.endOfLifeDate",
  "recognitionInfo.modelMetadata.endOfSupportDate",
  "recognitionInfo.modelMetadata.name",
  "recognitionInfo.modelMetadata.releaseDate",
  "recognitionInfo.osMetadata.build",
  "recognitionInfo.osMetadata.endOfLifeDate",
  "recognitionInfo.osMetadata.endOfSupportDate",
  "recognitionInfo.osMetadata.fullName",
  "recognitionInfo.osMetadata.name",
  "recognitionInfo.osMetadata.releaseDate",
  "recognitionInfo.osMetadata.version",
  "recognitionInfo.brandMetadata.warrantyUrl",
  "activeDirectoryInfo.comment",
  "activeDirectoryInfo.company",
  "activeDirectoryInfo.description",
  "activeDirectoryInfo.isEnabled",
  "activeDirectoryInfo.location",
  "activeDirectoryInfo.managerId",
  "activeDirectoryInfo.ou",
  "activeDirectoryGroups.description",
  "activeDirectoryGroups.name",
  "activeDirectoryGroups.type",
  "bitLockerRecoveryKeys.key",
  "bitLockerRecoveryKeys.lastChanged",
  "certificates.archived",
  "certificates.expirationDate",
  "certificates.friendlyName",
  "certificates.intendedPurposes",
  "certificates.issueBy",
  "certificates.issueTo",
  "certificates.serialNumber",
  "certificates.startDate",
  "certificates.store",
  "certificates.template",
  "certificates.thumbprint",
  "codecs.description",
  "codecs.fileName",
  "codecs.group",
  "codecs.manufacturer",
  "codecs.version",
  "COM.caption",
  "components.caption",
  "components.categoryId",
  "DCOM.caption",
  "pnpSignedDrivers.description",
  "pnpSignedDrivers.deviceClass",
  "pnpSignedDrivers.deviceId",
  "pnpSignedDrivers.deviceName",
  "pnpSignedDrivers.driverProviderName",
  "pnpSignedDrivers.driverVersion",
  "pnpSignedDrivers.friendlyName",
  "pnpSignedDrivers.hardwareId",
  "pnpSignedDrivers.pdo",
  "printerDrivers.driverPath",
  "printerDrivers.driverVersion",
  "printerDrivers.hardwareId",
  "printerDrivers.name",
  "printerDrivers.printProcessor",
  "printerDrivers.provider",
  "printerDrivers.version",
  "systemDrivers.caption",
  "systemDrivers.name",
  "systemDrivers.pathName",
  "systemDrivers.serviceType",
  "systemDrivers.startMode",
  "systemDrivers.state",
  "environments.name",
  "environments.userName",
  "environments.variableValue",
  "pageFiles.caption",
  "pageFiles.initialSize",
  "pageFiles.maximumSize",
  "pageFiles.path",
  "pageFiles.size",
  "performanceInformation.processorScore",
  "performanceInformation.gamingGraphicsScore",
  "performanceInformation.primaryHardDiskScore",
  "performanceInformation.graphicsScore",
  "performanceInformation.memoryScore",
  "infraredDevices.availability",
  "infraredDevices.caption",
  "infraredDevices.errorCode",
  "infraredDevices.manufacturer",
  "infraredDevices.protocolSupported",
  "infraredDevices.userConfig",
  "systemProducts.uuid",
  "systemProducts.version",
  "desktops.borderWidth",
  "desktops.dragFullWindows",
  "desktops.iconSpacing",
  "desktops.iconTitleFaceName",
  "desktops.iconTitleSize",
  "desktops.iconTitleWrap",
  "desktops.name",
  "desktops.pattern",
  "desktops.screenSaverActive",
  "desktops.wallpaper",
  "desktops.wallpaperStretched",
  "desktops.wallpaperTiled",
  "displayConfigurations.bitsPerPel",
  "displayConfigurations.displayFlags",
  "displayConfigurations.displayFrequency",
  "displayConfigurations.driverVersion",
  "displayConfigurations.logPixels",
  "displayConfigurations.name",
  "displayConfigurations.pelsHeight",
  "displayConfigurations.pelsWidth",
  "displayConfigurations.specificationVersion",
  "displayControllerConfigurations.bitsPerPixel",
  "displayControllerConfigurations.caption",
  "displayControllerConfigurations.colorPlanes",
  "displayControllerConfigurations.deviceEntriesInAColorTable",
  "displayControllerConfigurations.deviceSpecificPens",
  "displayControllerConfigurations.horizontalResolution",
  "displayControllerConfigurations.refreshRate",
  "displayControllerConfigurations.verticalResolution",
  "displayControllerConfigurations.videoMode",
  "networkClients.caption",
  "networkClients.manufacturer",
  "networkClients.name",
  "volumeGroups.format",
  "volumeGroups.free",
  "volumeGroups.name",
  "volumeGroups.permissions",
  "volumeGroups.size",
  "volumeGroups.status",
  "volumeGroups.uuid",
  "volumeGroups.volumeMembers",
  "volumeGroups.logicalVolumes.blockDevice",
  "volumeGroups.logicalVolumes.deviceMapperPath",
  "volumeGroups.logicalVolumes.relatedGroup",
  "volumeGroups.logicalVolumes.name",
  "volumeGroups.logicalVolumes.size",
  "volumeGroups.logicalVolumes.uuid",
  "volumeGroups.physicalVolumes.free",
  "volumeGroups.physicalVolumes.relatedGroup",
  "volumeGroups.physicalVolumes.name",
  "volumeGroups.physicalVolumes.size",
  "volumeGroups.physicalVolumes.used",
  "volumeGroups.physicalVolumes.uuid",
  "reconciliations.sourceId",
  "reconciliations.sourceType",
  "reconciliations.sourceName",
  "reconciliations.lastUpdate",
  "reconciliations.rule",
  "reconciliations.confidence",
  "reconciliations.fields.key",
  "reconciliations.fields.value",
] as const;

const AvailableAssetFieldsSchema = z.enum(availableAssetFields);

// Export types for TypeScript usage
export type AssetsFilterType = z.infer<typeof AssetsFilterTypeEnum>;
export type AssetsFilterConjunction = z.infer<typeof AssetsFilterConjunctionEnum>;
export type AssetsFiltersCondition = z.infer<typeof AssetsFiltersConditionSchema>;
export type AssetsFilterGroupedInput = AssetsFilterGroupedInputType;
export type AvailableAssetFields = z.infer<typeof AvailableAssetFieldsSchema>;

// Define the schema for the tool parameters
export const getAssetsResourcesSchema = {
  siteId: z
    .string()
    .uuid()
    .describe(
      "UUID of the site containing the assets. Use the 'get-authorized-sites' tool to discover available site identifiers and their corresponding UUIDs.",
    ),
  limit: z.number().max(500).optional().describe("Maximum number of assets to return (default: 10)"),
  filters: AssetsFilterGroupedInputSchema.optional().describe(
    "Structured filter object with conditions, conjunctions, and nested groups",
  ),
  fields: z
    .array(AvailableAssetFieldsSchema)
    .max(0)
    .optional()
    .describe(
      `Optional list of specific field paths to request. If not provided, default fields will be used. Maximum 30 fields allowed. Available fields: ${availableAssetFields.join(", ")}`,
    ),
  cursor: z.string().optional().describe("Cursor for pagination"),
};

// Implementation of the get-assets-resources tool
export const getAssetsResourcesHandler = async ({
  siteId,
  limit = 10,
  filters,
  fields = [],
  cursor,
}: z.infer<
  z.ZodSchema<{
    siteId: string;
    limit?: number;
    filters?: AssetsFilterGroupedInput;
    fields?: AvailableAssetFields[];
    cursor?: string;
  }>
>): Promise<CallToolResult> => {
  // Define default fields to query if none specified
  const defaultFields: AvailableAssetFields[] = [
    "key",
    "assetBasicInfo.name",
    "assetBasicInfo.domain",
    "assetBasicInfo.type",
    "assetBasicInfo.subType",
    "assetBasicInfo.typeGroup",
    "installationId",
  ];

  // Use user-specified fields or defaults
  const fieldsToQuery = fields.length > 0 ? fields : defaultFields;

  // Prepare pagination object
  const pagination = {
    limit,
    page: cursor ? "NEXT" : "FIRST",
    ...(cursor && { cursor }),
  };

  // Prepare variables for GraphQL query
  const variables: {
    siteId: string;
    fields: AvailableAssetFields[];
    assetPagination: Record<string, unknown>;
    filters?: AssetsFilterGroupedInput;
  } = {
    siteId,
    fields: fieldsToQuery,
    assetPagination: pagination,
  };

  // Only add filters if provided
  if (filters) {
    try {
      variables.filters = filters;
    } catch (error) {
      return {
        content: [
          {
            type: "text",
            text: `Invalid filters JSON: ${error instanceof Error ? error.message : String(error)}`,
          },
        ],
      };
    }
  }

  // Build GraphQL query with variables
  const query = `
    query GetAssetsResources(
      $siteId: ID!
      $fields: [String!]!
      $assetPagination: AssetsPaginationInputValidated
      $filters: AssetsFilterGroupedInput
    ) {
      site(id: $siteId) {
        assetResources(
          fields: $fields
          assetPagination: $assetPagination
          filters: $filters
        ) {
          items
          pagination {
            limit
            current
            next
            page
          }
          total
        }
      }
    }
  `;

  try {
    const client = createGraphQLClient();
    const response = await client.request<SiteAssetResourcesResponse>(query, variables);

    return {
      content: [
        {
          type: "text",
          text: JSON.stringify(response, null, 2),
        },
      ],
      nextCursor: response.site.assetResources.pagination.next || undefined,
    };
  } catch (error) {
    console.log(error);
    return {
      content: [
        {
          type: "text",
          text: `Error fetching asset resources: ${error instanceof Error ? error.message : String(error)}`,
        },
      ],
    };
  }
};
